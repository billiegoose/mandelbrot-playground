{"version":3,"sources":["src/utils/HSVtoRGB.js","src/shader.js","src/utils/iter.js","src/utils/debounce.js","src/utils/complex.js","src/utils/lerp2d.js","src/utils/zoom.js","src/utils/evalPoint.js","src/utils/pan.js","src/index.js"],"names":["HSVtoRGB","h","s","v","r","g","b","i","f","p","q","t","arguments","length","Math","floor","round","vertexShaderSource","fragmentShaderSource","gl","getContext","document","getElementById","viewport","drawingBufferWidth","drawingBufferHeight","clearColor","clear","COLOR_BUFFER_BIT","vertexShader","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","buildProgram","resolutionLocation","getUniformLocation","uniform2f","console","log","scaleX","uniform1f","gLEFT","scaleY","gTOP","enableVertexAttribArray","buffer","createBuffer","cleanup","useProgram","deleteBuffer","deleteProgram","canvas","width","clientWidth","height","clientHeight","source","type","shader","createShader","shaderSource","createProgram","attachShader","linkProgram","detachShader","deleteShader","getProgramParameter","LINK_STATUS","linkErrLog","getProgramInfoLog","Error","drawGL","canvasWidth","canvasHeight","lowerBoundr","lowerBoundi","upperBoundr","upperBoundi","gWIDTH","a_scaleX","a_gLEFT","a_scaleY","a_gTOP","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","drawArrays","POINTS","iter","pzr","pzrs","pzis","zi","n","log2","debounce","fn","delay","at_start","guarantee","timeout","args","self","Array","prototype","slice","call","setTimeout","run","apply","clearTimeout","add","c1","c2","mult","c","scaler","lerp2d","x","y","bounds","WIDTH","HEIGHT","gHEIGHT","zoom","delta","negc","scale","max","evalPoint","pan","x0","y0","prevC","diff","hasExperimentalIsInputPending","navigator","scheduling","isInputPending","canvas2","ctx","imageData","getImageData","canvas3","offscreen","transferControlToOffscreen","worker","Worker","postMessage","drawCanvas","data","color","value","toExponential","count","isMouseDown","draw","start","performance","now","putImageData","finish","JSON","stringify","draw2","addEventListener","event","preventDefault","offsetX","offsetY","deltaY","draw3","prevMouseXY","canvasOnMouseMove","toFixed","workerBusy","force","finalDraw3","onmessage","evt","done"],"mappings":"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","file":"src.3b702d29.js","sourceRoot":"..","sourcesContent":["// HSVtoRGB source: https://stackoverflow.com/a/17243070\nexport function HSVtoRGB(h, s, v) {\n  var r, g, b, i, f, p, q, t;\n  if (arguments.length === 1) {\n      s = h.s, v = h.v, h = h.h;\n  }\n  i = Math.floor(h * 6);\n  f = h * 6 - i;\n  p = v * (1 - s);\n  q = v * (1 - f * s);\n  t = v * (1 - (1 - f) * s);\n  switch (i % 6) {\n      case 0: r = v, g = t, b = p; break;\n      case 1: r = q, g = v, b = p; break;\n      case 2: r = p, g = v, b = t; break;\n      case 3: r = p, g = q, b = v; break;\n      case 4: r = t, g = p, b = v; break;\n      case 5: r = v, g = p, b = q; break;\n  }\n  return {\n      r: Math.round(r * 255),\n      g: Math.round(g * 255),\n      b: Math.round(b * 255)\n  };\n}\n","// TODO: Learn how I can make the shader interactive.\n\nconst vertexShaderSource = `\n#version 100\nvoid main() {\ngl_Position = vec4(0.0, 0.0, 0.0, 1.0);\ngl_PointSize = 600.0;\n}`\n\nconst fragmentShaderSource = `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform float scaleX;\nuniform float scaleY;\nuniform float gLEFT;\nuniform float gTOP;\n\n// hsv2rgb source: https://stackoverflow.com/a/17897228\n// All components are in the range [0…1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 mandelbrot(vec2 pos){\n  float zx = pos.x * scaleX + gLEFT;\n  float zy = pos.y * scaleY + gTOP;\n  \n  const int maxIter = 1024;\n  \n  float cx = zx * 1.0;\n  float cy = zy * 1.0;\n  \n  float count = 0.0;\n  \n  for(int i = 0; i < maxIter; ++i){\n    if (zx * zx + zy * zy > 4.0) break;\n    \n    float temp = zx * zx - zy * zy;\n    \n    zy = 2.0 * zx * zy + cy;\n    zx = temp + cx;\n    \n    count += 1.0;\n  }\n  if (count == float(maxIter)) return vec3(0.0, 0.0, 0.0);\n  float smoothingMagic = 1.0 - log( (log2(zy * zy + zx * zx) / 2.0) / log(2.0) ) / log(2.0);\n  return hsv2rgb(vec3((count + smoothingMagic) / 100.0, 0.9, 1.0));\n}\n\nvoid main( void ) {\n  vec2 position = gl_FragCoord.xy / resolution;\n  vec3 color = mandelbrot(position);\n  gl_FragColor = vec4(color, 1.0 );\n}`\n\nlet gl = getContext(document.getElementById(\"canvas2\"));\n\ngl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\ngl.clearColor(0.0, 0.0, 0.0, 1.0);\ngl.clear(gl.COLOR_BUFFER_BIT);\n\nlet vertexShader = compileShader(gl, vertexShaderSource, gl.VERTEX_SHADER);\nlet fragmentShader = compileShader(gl, fragmentShaderSource, gl.FRAGMENT_SHADER);\nlet program = buildProgram(gl, vertexShader, fragmentShader);\n\nvar resolutionLocation = gl.getUniformLocation(program, \"resolution\");\ngl.uniform2f(resolutionLocation, 600.0, 400.0);\nconsole.log(resolutionLocation);\n\nvar scaleX = gl.getUniformLocation(program, \"scaleX\");\ngl.uniform1f(scaleX, 3);\nvar gLEFT = gl.getUniformLocation(program, \"gLEFT\");\ngl.uniform1f(gLEFT, -2);\n\nvar scaleY = gl.getUniformLocation(program, \"scaleY\");\ngl.uniform1f(scaleY, 2.0);\nvar gTOP = gl.getUniformLocation(program, \"gTOP\");\ngl.uniform1f(gTOP, -1);\n\ngl.enableVertexAttribArray(0);\nconst buffer = gl.createBuffer();\ngl.bindBuffer(gl.ARRAY_BUFFER, buffer);\ngl.vertexAttribPointer(0, 1, gl.FLOAT, false, 0, 0);\n\ngl.drawArrays(gl.POINTS, 0, 1);\n\nfunction cleanup(gl, buffer, program) {\n  gl.useProgram(null);\n  if (buffer) gl.deleteBuffer(buffer);\n  if (program) gl.deleteProgram(program);\n}\n\nfunction getContext (canvas) {\n  canvas.width = canvas.clientWidth;\n  canvas.height = canvas.clientHeight;\n  return canvas.getContext(\"webgl\");\n}\n\nfunction compileShader (gl, source, type) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n}\n\nfunction buildProgram (gl, vertexShader, fragmentShader) {\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  gl.detachShader(program, vertexShader);\n  gl.detachShader(program, fragmentShader);\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    const linkErrLog = gl.getProgramInfoLog(program);\n    gl.useProgram(null);\n    gl.deleteProgram(program);\n    throw new Error(\"Shader program did not link successfully. \" + \"Error log: \" + linkErrLog);\n  }\n  gl.useProgram(program);\n  return program;\n}\n\nexport function drawGL(\n  canvasWidth,\n  canvasHeight,\n  lowerBoundr,\n  lowerBoundi,\n  upperBoundr,\n  upperBoundi\n) {\n  const gWIDTH = upperBoundr - lowerBoundr;\n  const gLEFT = lowerBoundr;\n  const scaleX = gWIDTH;\n\n  const gHEIGHT = upperBoundi - lowerBoundi;\n  const gTOP = lowerBoundi;\n  const scaleY = gHEIGHT;\n\n  var resolutionLocation = gl.getUniformLocation(program, \"resolution\");\n  gl.uniform2f(resolutionLocation, canvasWidth, canvasHeight);\n\n  var a_scaleX = gl.getUniformLocation(program, \"scaleX\");\n  gl.uniform1f(a_scaleX, scaleX);\n  var a_gLEFT = gl.getUniformLocation(program, \"gLEFT\");\n  gl.uniform1f(a_gLEFT, gLEFT);\n\n  var a_scaleY = gl.getUniformLocation(program, \"scaleY\");\n  gl.uniform1f(a_scaleY, scaleY);\n  var a_gTOP = gl.getUniformLocation(program, \"gTOP\");\n  gl.uniform1f(a_gTOP, gTOP);\n\n  gl.enableVertexAttribArray(0);\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.vertexAttribPointer(0, 1, gl.FLOAT, false, 0, 0);\n\n  gl.drawArrays(gl.POINTS, 0, 1);\n}\n","// Note: iter and iterRust seem to be about the same speed. Probably any speed gains are offset by the back-and-forth between JS and Rust.\nexport const iter = (r, i) => {\n  let pzr = 0;\n  let pzrs = 0;\n  let pzis = 0;\n  let zr = 0;\n  let zi = 0;\n  let n = 0;\n  for (n = 0; n < 1024; n++) {\n    if (pzrs + pzis > 4) {\n      break;\n    }\n    zr = pzrs - pzis + r;\n    zi = pzr * zi;\n    zi += zi;\n    zi += i;\n\n    pzr = zr;\n    pzrs = pzr * pzr;\n    pzis = zi * zi;\n  }\n  if (n === 1024) return n;\n  const smoothingMagic = 1.0 - Math.log( (Math.log2(pzrs + pzis) / 2.0) / Math.log(2.0) ) / Math.log(2.0);\n  return n + smoothingMagic;\n};\n","// https://github.com/hayes/just-debounce/blob/master/index.js\nexport function debounce(fn, delay, at_start, guarantee) {\n  var timeout;\n  var args;\n  var self;\n\n  return function debounced() {\n    self = this;\n    args = Array.prototype.slice.call(arguments);\n\n    if (timeout && (at_start || guarantee)) {\n      return;\n    } else if (!at_start) {\n      clear();\n\n      timeout = setTimeout(run, delay);\n      return timeout;\n    }\n\n    timeout = setTimeout(clear, delay);\n    fn.apply(self, args);\n\n    function run() {\n      clear();\n      fn.apply(self, args);\n    }\n\n    function clear() {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n}","export const add = (c1, c2) => ({ r: c1.r + c2.r, i: c1.i + c2.i });\nexport const mult = (c, scaler) => ({ r: c.r * scaler, i: c.i * scaler });\n","export function lerp2d (x, y, bounds, { WIDTH, HEIGHT}) {\n  const gWIDTH = bounds[1].r - bounds[0].r;\n  const gHEIGHT = bounds[1].i - bounds[0].i;\n  const gLEFT = bounds[0].r;\n  const gTOP = bounds[1].i;\n  const scaleX = gWIDTH / (WIDTH - 1);\n  const scaleY = -gHEIGHT / (HEIGHT - 1);\n  return { r: x * scaleX + gLEFT, i: y * scaleY + gTOP };\n}","import { add, mult } from './complex.js'\nimport { lerp2d } from './lerp2d.js'\n\n\nexport const zoom = (x, y, delta, bounds, { WIDTH, HEIGHT }) => {\n  const c = lerp2d(x, y, bounds, { WIDTH, HEIGHT});\n  const negc = mult(c, -1);\n  // Compute new bounds\n  // 1. offset\n  bounds[0] = add(bounds[0], negc);\n  bounds[1] = add(bounds[1], negc);\n  // 2. scale\n  const scale = Math.max(1 + delta * 0.01, 0.7);\n  bounds[0] = mult(bounds[0], scale);\n  bounds[1] = mult(bounds[1], scale);\n  // 3. onset\n  bounds[0] = add(bounds[0], c);\n  bounds[1] = add(bounds[1], c);\n  return bounds;\n}","import { lerp2d } from './lerp2d.js'\nimport { iter } from './iter.js'\n\nexport const evalPoint = (x, y, bounds, {WIDTH, HEIGHT}) => {\n  const c = lerp2d(x, y, bounds, {WIDTH, HEIGHT});\n  return iter(c.r, c.i);\n}","import { lerp2d} from './lerp2d.js'\nimport { add, mult } from './complex'\n\nexport const pan = (x, y, x0, y0, bounds, {WIDTH, HEIGHT}) => {\n  const c = lerp2d(x, y, bounds, {WIDTH, HEIGHT});\n  const prevC = lerp2d(x0, y0, bounds, {WIDTH, HEIGHT});\n  let diff = add(mult(c, -1), prevC);\n  bounds[0] = add(bounds[0], diff);\n  bounds[1] = add(bounds[1], diff);\n  return bounds\n}","import { HSVtoRGB } from \"./utils/HSVtoRGB.js\"\nimport { drawGL } from \"./shader.js\"\nimport { iter } from \"./utils/iter.js\"\nimport { debounce } from \"./utils/debounce.js\"\nimport { zoom } from \"./utils/zoom.js\"\nimport { evalPoint } from \"./utils/evalPoint.js\"\nimport { pan } from './utils/pan.js'\n\n// import { add as addRust, iter as iterRust } from \"./draw.rs\";\n\nconst hasExperimentalIsInputPending = navigator.scheduling && navigator.scheduling.isInputPending;\n\n// console.log(addRust(2, 3), iterRust(0, 0, 255));\nconst canvas = document.getElementById(\"canvas\");\nconst canvas2 = document.getElementById(\"canvas2\");\nconst ctx = canvas.getContext(\"2d\");\nconst imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\nconst WIDTH = canvas.clientWidth;\nconst HEIGHT = canvas.clientHeight;\nconsole.log(WIDTH, HEIGHT);\n\nvar canvas3 = document.getElementById(\"canvas_worker\");\nvar offscreen = canvas3.transferControlToOffscreen();\n\nvar worker = new Worker(\"worker.js\");\nworker.postMessage({WIDTH, HEIGHT, canvas: offscreen}, [offscreen]);\n\n// let bounds = [{r: -2, i: -1}, {r: 1, i: 1}];\n// let bounds = [\n//   { r: -1.0239051845552098, i: -0.36249787751053836 },\n//   { r: -1.0239051835666346, i: -0.362497876851488 }\n// ];\nlet bounds = [{\"r\":0.2361513689220573,\"i\":-0.5210970613723728},{\"r\":0.23662026741217732,\"i\":-0.5207844623789595}]\n\nconst drawCanvas = (\n  canvasWidth,\n  canvasHeight,\n  lowerBoundr,\n  lowerBoundi,\n  upperBoundr,\n  upperBoundi,\n  data\n) => {\n  let n = 0;\n  let min = 255;\n\n  const gWIDTH = upperBoundr - lowerBoundr;\n  const gLEFT = lowerBoundr;\n  const scaleX = gWIDTH / (canvasWidth - 1);\n\n  const gHEIGHT = upperBoundi - lowerBoundi;\n  const gTOP = upperBoundi;\n  const scaleY = -gHEIGHT / (canvasHeight - 1);\n  document.getElementById('scale').value = (2 / gHEIGHT).toExponential(2);\n\n  // let val;\n  let color;\n  for (let y = 0; y < canvasHeight; y++) {\n    for (let x = 0; x < canvasWidth; x++) {\n      let count = Math.max(0, iter(x * scaleX + gLEFT, y * scaleY + gTOP));\n      color = count === 1024 ? {r: 0, g: 0, b: 0} : HSVtoRGB(\n        count / 100.0,\n        0.9,\n        1.0\n      );\n      // min = Math.min(min, val);\n      data[n] = color.r;\n      data[n + 1] = color.g;\n      data[n + 2] = color.b;\n      data[n + 3] = 255;\n      n += 4;\n    }\n    if (hasExperimentalIsInputPending) {\n      if (navigator.scheduling.isInputPending(['wheel'])) {\n        console.log('wheel break!')\n        return false;\n      }\n      if (\n        isMouseDown\n        && navigator.scheduling.isInputPending(['mousemove'])\n        && !navigator.scheduling.isInputPending(['mouseup'])\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nconst draw = () => {\n  let start = performance.now();\n\n  let finished = drawCanvas(\n    WIDTH,\n    HEIGHT,\n    bounds[0].r,\n    bounds[0].i,\n    bounds[1].r,\n    bounds[1].i,\n    imageData.data\n  );\n  if (!finished) return;\n\n  ctx.putImageData(imageData, 0, 0);\n  let finish = performance.now();\n  document.getElementById(\"ms\").value = Math.floor(finish - start);\n  console.log(JSON.stringify(bounds));\n};\n\ndraw();\n\nconst draw2 = () => {\n  let start = performance.now();\n\n  drawGL(\n    WIDTH,\n    HEIGHT,\n    bounds[0].r,\n    bounds[0].i,\n    bounds[1].r,\n    bounds[1].i\n  );\n\n  let finish = performance.now();\n  document.getElementById(\"ms2\").value = Math.floor(finish - start);\n  console.log(JSON.stringify(bounds));\n  // compute scale - redundant but needed so we can print the value\n  const gHEIGHT = bounds[1].i - bounds[0].i;\n  document.getElementById('scale2').value = (2 / gHEIGHT).toExponential(2);\n};\n\ndraw2();\n\ncanvas.addEventListener(\"wheel\", event => {\n  event.preventDefault();\n  bounds = zoom(event.offsetX, event.offsetY, event.deltaY, bounds, {WIDTH, HEIGHT})\n  draw();\n  draw2();\n  draw3();\n});\n\n\ncanvas2.addEventListener(\"wheel\", event => {\n  event.preventDefault();\n  bounds = zoom(event.offsetX, event.offsetY, event.deltaY, bounds, {WIDTH, HEIGHT})\n  draw2();\n  draw3();\n});\n\ncanvas3.addEventListener(\"wheel\", event => {\n  event.preventDefault();\n  bounds = zoom(event.offsetX, event.offsetY, event.deltaY, bounds, {WIDTH, HEIGHT})\n  draw2();\n  draw3();\n});\n\nlet prevMouseXY = null;\nlet isMouseDown = false;\n\nconst canvasOnMouseMove = event => {\n  event.preventDefault();\n  document.getElementById(\"output\").value = evalPoint(event.offsetX, event.offsetY, bounds, {WIDTH, HEIGHT}).toFixed(2);\n  if (isMouseDown) {\n    if (prevMouseXY) {\n      bounds = pan(event.offsetX, event.offsetY, prevMouseXY[0], prevMouseXY[1], bounds, {WIDTH, HEIGHT})\n    }\n    prevMouseXY = [event.offsetX, event.offsetY];\n    draw();\n    draw2();\n    draw3();\n  }\n}\n\nif (hasExperimentalIsInputPending) {\n  canvas.addEventListener(\"mousemove\", canvasOnMouseMove);\n} else {\n  canvas.addEventListener(\n    \"mousemove\",\n    debounce(canvasOnMouseMove),\n    16\n  );\n}\n\ncanvas.addEventListener(\"mousedown\", event => {\n  isMouseDown = true;\n});\n\ncanvas2.addEventListener(\n  \"mousemove\",\n  debounce(event => {\n    event.preventDefault();\n    document.getElementById(\"output2\").value = evalPoint(event.offsetX, event.offsetY, bounds, {WIDTH, HEIGHT}).toFixed(2);\n    if (isMouseDown) {\n      if (prevMouseXY) {\n        bounds = pan(event.offsetX, event.offsetY, prevMouseXY[0], prevMouseXY[1], bounds, {WIDTH, HEIGHT})\n        }\n      prevMouseXY = [event.offsetX, event.offsetY];\n      draw3();\n      draw2();\n    }\n  }),\n  16\n);\n\ncanvas3.addEventListener(\"mousedown\", event => {\n  isMouseDown = true;\n});\n\ncanvas3.addEventListener(\n  \"mousemove\",\n  event => {\n    event.preventDefault();\n    document.getElementById(\"output3\").value = evalPoint(event.offsetX, event.offsetY, bounds, {WIDTH, HEIGHT}).toFixed(2);\n    if (isMouseDown) {\n      if (prevMouseXY) {\n        bounds = pan(event.offsetX, event.offsetY, prevMouseXY[0], prevMouseXY[1], bounds, {WIDTH, HEIGHT})\n        }\n      prevMouseXY = [event.offsetX, event.offsetY];\n      draw3();\n      draw2();\n    }\n  }\n);\n\ncanvas2.addEventListener(\"mousedown\", event => {\n  isMouseDown = true;\n});\n\ndocument.addEventListener(\"mouseup\", event => {\n  isMouseDown = false;\n  prevMouseXY = null;\n});\n\nvar workerBusy = false;\nconst draw3 = (force) => {\n  console.log('busy', workerBusy)\n  if (force || !workerBusy) {\n    workerBusy = performance.now();\n    worker.postMessage({bounds})\n  } else {\n    finalDraw3()\n  }\n}\n\nconst finalDraw3 = debounce(() => draw3(true), 400)\n\nworker.onmessage = (evt) => {\n  console.log(evt)\n  if (evt.data.done) {\n    let finish = performance.now();\n    document.getElementById(\"ms3\").value = Math.floor(finish - workerBusy);\n    workerBusy = null;\n  }\n}"]}